/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import DAOs.ArticuloJpaController;
import DAOs.MovimientoarticuloJpaController;
import DAOs.exceptions.IllegalOrphanException;
import DAOs.exceptions.NonexistentEntityException;
import Entities.Articulo;
import Entities.Movimientoarticulo;

import java.util.Arrays;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.ERROR_MESSAGE;
import static javax.swing.JOptionPane.WARNING_MESSAGE;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jonat
 */
public class Inventario extends javax.swing.JFrame {

    private EntityManagerFactory emf = Persistence.createEntityManagerFactory("InventarioJPAPU");
    private EntityManager em = emf.createEntityManager();

    /**
     * Creates new form Inventario
     */
    public Inventario() {
        initComponents();

        em.getTransaction().begin();
        em.getTransaction().commit();
        ArticuloJpaController artContr = new ArticuloJpaController(emf);

        System.out.println(Arrays.toString(artContr.findArticuloEntities().toArray()));
        showDataInTableProducto(artContr.findArticuloEntities(), jTableMovtos);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableMovtos = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtDescr = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jspnPrec = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        jspnExistencia = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        jspnClave = new javax.swing.JSpinner();
        btnAgregar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableMovtos1 = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Productos");

        jTableMovtos.setBackground(new java.awt.Color(204, 204, 255));
        jTableMovtos.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jTableMovtos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableMovtos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMovtosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableMovtos);

        jLabel1.setFont(new java.awt.Font("Roboto", 1, 24)); // NOI18N
        jLabel1.setText("Productos");

        jLabel2.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jLabel2.setText("Descripci√≥n:");

        txtDescr.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        txtDescr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDescrActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jLabel3.setText("Precio ($ pesos):");

        jspnPrec.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jspnPrec.setModel(new javax.swing.SpinnerNumberModel(Float.valueOf(10.5f), Float.valueOf(0.5f), null, Float.valueOf(1.0f)));

        jLabel4.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jLabel4.setText("Existencia (unidades):");

        jspnExistencia.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jLabel5.setText("Clave prod.:");

        jspnClave.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jspnClave.setEnabled(false);

        btnAgregar.setBackground(new java.awt.Color(153, 255, 153));
        btnAgregar.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnActualizar.setBackground(new java.awt.Color(255, 255, 153));
        btnActualizar.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnEliminar.setBackground(new java.awt.Color(255, 204, 204));
        btnEliminar.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        jTableMovtos1.setBackground(new java.awt.Color(255, 204, 255));
        jTableMovtos1.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jTableMovtos1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableMovtos1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMovtos1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableMovtos1);

        jLabel6.setFont(new java.awt.Font("Roboto Black", 2, 14)); // NOI18N
        jLabel6.setText("Movimientos del producto seleccionado");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(238, 238, 238)
                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 493, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnAgregar)
                                .addGap(18, 18, 18)
                                .addComponent(btnActualizar)
                                .addGap(18, 18, 18)
                                .addComponent(btnEliminar))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jLabel5))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtDescr, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel3))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(168, 168, 168)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jspnPrec, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jspnClave, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jspnExistencia, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel5)
                    .addComponent(jspnClave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtDescr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jspnPrec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jspnExistencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregar)
                    .addComponent(btnActualizar)
                    .addComponent(btnEliminar))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                .addGap(42, 42, 42)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtDescrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDescrActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDescrActionPerformed

    private void jTableMovtosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMovtosMouseClicked
        // TODO add your handling code here:
        int row = jTableMovtos.getSelectedRow();
        String value = jTableMovtos.getModel().getValueAt(row, 0).toString();

        ArticuloJpaController artContr = new ArticuloJpaController(emf);

        Articulo al = artContr.findArticulo(Integer.parseInt(value));
        this.jspnClave.setValue(al.getClaveart());
        this.txtDescr.setText(al.getDescripcion());

        System.out.println(al.getExistencia().toString());
        this.jspnExistencia.setValue(al.getExistencia());

        this.jspnPrec.setValue(al.getPrecio());
        
        
        /*Para la tabla de movimientos*/
        
        em.getTransaction().begin();
        em.getTransaction().commit();
        MovimientoarticuloJpaController movtoContr = new MovimientoarticuloJpaController(emf);

        //System.out.println(Arrays.toString(movtoContr.findArticuloEntities().toArray()));
        List<Movimientoarticulo> listEmployees=(List<Movimientoarticulo>) al.getMovimientoarticuloCollection();
        
        showDataInTableMovtos(listEmployees, jTableMovtos1);
        
    }//GEN-LAST:event_jTableMovtosMouseClicked

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        // TODO add your handling code here:
        ArticuloJpaController artContr = new ArticuloJpaController(emf);
        Articulo art = new Articulo();

        art.setDescripcion(this.txtDescr.getText());
        art.setExistencia((Integer) this.jspnExistencia.getValue());
        art.setPrecio((float) this.jspnPrec.getValue());

        artContr.create(art);
        
        
        Movimientoarticulo movtoArt=new Movimientoarticulo();
        MovimientoarticuloJpaController movtoContr=new MovimientoarticuloJpaController(emf);
        
        movtoArt.setCantidad(art.getExistencia());
        movtoArt.setClaveart(art);
        movtoArt.setFecha(new Date().toString());
        System.out.println(movtoArt.getFecha());
        movtoArt.setTipo("Entrada");
        
        movtoContr.create(movtoArt);
        

        showDataInTableProducto(artContr.findArticuloEntities(), jTableMovtos);

    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        try {
            // TODO add your handling code here:
            ArticuloJpaController artContr = new ArticuloJpaController(emf);
            Articulo art = new Articulo();

            art.setClaveart((Integer) this.jspnClave.getValue());
            art.setDescripcion(this.txtDescr.getText());
            art.setExistencia((Integer) this.jspnExistencia.getValue());
            art.setPrecio((float) this.jspnPrec.getValue());

            em = emf.createEntityManager();
            em.getTransaction().begin();
            em.merge(art);
            em.getTransaction().commit();
            
            
            showDataInTableProducto(artContr.findArticuloEntities(), jTableMovtos);
        } catch (Exception ex) {
            Logger.getLogger(Inventario.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        try {
            // TODO add your handling code here:

            ArticuloJpaController artContr = new ArticuloJpaController(emf);
            Articulo art = new Articulo();
            art.setClaveart((Integer) this.jspnClave.getValue());
            System.out.println("Articulo: "+art.getClaveart());
            artContr.destroy(art.getClaveart());
            
            showDataInTableProducto(artContr.findArticuloEntities(), jTableMovtos);
        } catch (IllegalOrphanException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Error", ERROR_MESSAGE);
            Logger.getLogger(Inventario.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NonexistentEntityException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Advertencia", WARNING_MESSAGE);
            Logger.getLogger(Inventario.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void jTableMovtos1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMovtos1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTableMovtos1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Inventario().setVisible(true);
            }
        });
    }

    public void showDataInTableProducto(List<Articulo> listEmployees, JTable table) {
        DefaultTableModel model = new DefaultTableModel(new Object[]{"Clave", "Descripcion", "Precio", "Existencia"}, 0);
        for (Articulo alum : listEmployees) {
            model.addRow(new Object[]{alum.getClaveart(), alum.getDescripcion(), alum.getPrecio(), alum.getExistencia()});
        }
        table.setModel(model);
    }
    
    public void showDataInTableMovtos(List<Movimientoarticulo> listEmployees, JTable table) {
        DefaultTableModel model = new DefaultTableModel(new Object[]{"Folio", "Fecha", "Tipo", "Cantidad", "Producto"}, 0);
        for (Movimientoarticulo alum : listEmployees) {
            model.addRow(new Object[]{alum.getFolio(), alum.getFecha(), alum.getTipo(), alum.getCantidad(), alum.getClaveart().getClaveart()});
        }
        table.setModel(model);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableMovtos;
    private javax.swing.JTable jTableMovtos1;
    private javax.swing.JSpinner jspnClave;
    private javax.swing.JSpinner jspnExistencia;
    private javax.swing.JSpinner jspnPrec;
    private javax.swing.JTextField txtDescr;
    // End of variables declaration//GEN-END:variables
}
